{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","DETAILS_URL","request","url","fetch","then","response","ok","json","setTimeout","getPhones","getPhonesDetails","phoneId","arr","Promise","all","map","phone","id","allPhones","ul","document","createElement","forEach","li","append","name","body"],"mappings":";AAAA,aA+BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5BA,IAAMA,EAAW,wEAEXC,EAAc,oEAIpB,SAASC,EAAQC,GACRC,OAAAA,MAAMD,GACVE,KAAK,SAAAC,GACA,OAACA,EAASC,GAMPD,EAASE,OALPC,WAAW,WACVH,MAAAA,GACL,OAOX,SAASI,IACAR,OAAAA,EAAQF,GAGjB,IAAMW,EAAmB,SAACC,GACjBV,OAAAA,EAAWD,GAAAA,OAAAA,GAAcW,OAAAA,EAAhC,WAIFF,IACGL,KAAK,SAAAQ,GACJC,QAAQC,IAAQF,EAAAA,EAAIG,IAAI,SAAAC,GAASN,OAAAA,EAAiBM,EAAMC,QACrDb,KAAK,SAAAc,GACEC,IAAAA,EAAKC,SAASC,cAAc,MAElCH,EAAUI,QAAQ,SAAAN,GACVO,IAAAA,EAAKH,SAASC,cAAc,MAElCE,EAAGC,OAAOR,EAAMS,MAChBN,EAAGK,OAAOD,KAGZH,SAASM,KAAKF,OAAOL","file":"main.8be6fcc2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static'\n  + '/api/phones.json';\nconst DETAILS_URL = 'https://mate-academy.github.io/phone-catalogue-static'\n  + '/api/phones/';\n\n// utility request => getPhones + getPhonesDetails\nfunction request(url) {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        return setTimeout(() => {\n          throw response;\n        }, 5000);\n      }\n\n      return response.json();\n    });\n};\n\nfunction getPhones() {\n  return request(BASE_URL);\n};\n\nconst getPhonesDetails = (phoneId) => {\n  return request(`${DETAILS_URL}${phoneId}.json`);\n};\n\n// getting an array of phones via Promise.all and display to the page\ngetPhones()\n  .then(arr => {\n    Promise.all([...arr.map(phone => getPhonesDetails(phone.id))])\n      .then(allPhones => {\n        const ul = document.createElement('ul');\n\n        allPhones.forEach(phone => {\n          const li = document.createElement('li');\n\n          li.append(phone.name);\n          ul.append(li);\n        });\n\n        document.body.append(ul);\n      });\n  });\n"]}